#include <iostream>
#include <time.h> 
using namespace std; // подключение имён пространства std 
const int n = 3; // глобальная константная переменная для хранения числа строк матрицы
const int m = 4;// глобальная константная переменная для хранения числа столбцов матрицы
void Fillarr(int arr[n][m])
{
	for (int i(0); i < n; i++) // начало цикла с предусловием 
	{
		for (int j(0); j < m; j++) // начало цикла с предусловием
		{
			arr[i][j] = rand() % 4; // заполнение матрицы случайными значениями от 0 до 
			//указанного значения после%
		}
	}
}
void Print_arr(int arr[n][m])
{
	cout << "\t\t\t~~~~Матрица  3x4~~~~ \n\n"; // вывод в консоль 
	for (int i(0); i < n; i++) // начало цикла с предусловием 
	{
		cout << "|"; // вывод в консоль
		for (int j(0); j < m; j++) // начало цикла с предусловием
		{
			cout.width(10); // задаём пространство длиною в 10 пунктов для вывода
			cout << arr[i][j]; // выводим матрицу 
			cout << "     |";
		}
		cout << "  " << endl;
	}
	cout << "\n";
}
int Count(int arr[n][m], int value) // функция для подсчёта повторений 
{
	int c = 0; // переменная - счётчик
	for (int i = 0; i < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			if (arr[i][j] == value) // значения массива сравниваются с указанным значением 
				c++; // если находится повторяющееся значение, то счётчик инкрементируется
		}
	}
	return c; // возвращаем значение переменной-счётчика
}
void CheckMaxNum(int arr[n][m])// поиск максимального значения , встречающегося в матрице более 2 раз
{
int max;
bool found = false;

for (int i = 0; i < n; i++)
{
	for (int j = 0; j < m; j++)
	{
		int x = arr[i][j]; // присваиваем переменной значение массива
		if (Count(arr, x) > 1) // условие  при котором если заданное число х встречается
			//больше 1 раза в матрице, то
		{
		if (found == false || x > max)// если флаг false или х больше max
		{
		found = true; // флаг true
		max = x; // переменной max присвоить значение переменнной х
		}
		}
	}
}
if (found == true)
cout << "Максимальное число встречающееся больше одного раза: " << max << endl;
else
cout << "Максимальное число встречающееся более одного раза не найдено" << endl;
}
int CheckZeroElem(int arr[n][m]) // начало функции проверки на наличие нулевых элементов
{
	bool zero = false; // переменная - флаг 
	int count = 0;  // переменная  - счётчик
	for (int i = 0; i < n; i++) // объявление цикла 
	{
		zero = false; // намеренное переопределение переменной-флага для каждого прохода
		for (int j = 0; j < m; j++) //объявление вложенного цикла 
		{
			if (arr[i][j] == 0) // условие вложенного цикла, если элемент массива arr[i][j]
				//равен 0, то флаг становится в положение true
			{
				zero = true; // перевод переменной- флага в положение true 
			}
		}

		if (zero == true) // условие основного цикла 
		{
			++count; // инкрементирование переменной- счётчика
		}
	}
	return count; // возвращаем значение переменной-счётчика после всех вычислений
}
void ConsolMenu() // функция для инициализации меню
{
	cout << "1. Заполнить матрицу рандомногенерируемыми числами\n";// вывод в консоль
	cout << "2. Вывод матрицы\n";
	cout << "3. Проверить матрицу на нулевые элементы\n";
	cout << "4. Проверить матрицу колличество максимально повторяющихся элеменов более 1 раза";
	cout << "9. Выход" << endl;
}
int main() // основная функция
{

	setlocale(LC_ALL, "Russian"); // использование русского языка 
	srand(time(NULL));
	int  menu, zero = 0; // 
	int  arr[n][m];// объявление переменных    

	do
	{
		ConsolMenu();

		cin >> menu;

		cout << "\n";

		switch (menu)
		{
		case 1: Fillarr(arr); cout << "\n"; system("cls"); break;
		case 2: Print_arr(arr); break;
		case 3:
		{
			cout << "\n";
			cout << "Кол-во строк содержащие 0 :" << CheckZeroElem(arr) << "\n\n";
			break;
		}
		case 4:
		{
			CheckMaxNum(arr)// поиск максимального значения , встречающегося в матрице более 2 раз
				; cout << "\n"; break;
		}
		case 9: system("cls"); break;

		}
	} while (menu != 9);

	cout << "\n\n"; // вывод в консоль 

	system("pause"); // подключение системной команды пауза 

	return 0; // возвращение значений  

}